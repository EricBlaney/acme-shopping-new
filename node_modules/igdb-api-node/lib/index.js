"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
Object.defineProperty(exports, "getTagNumber", {
  enumerable: true,
  get: function get() {
    return _tagNumber["default"];
  }
});
exports["default"] = void 0;

var _apicalypse = _interopRequireDefault(require("apicalypse"));

var _deepmerge = _interopRequireDefault(require("deepmerge"));

var _isPlainObject = _interopRequireDefault(require("is-plain-object"));

var _tagNumber = _interopRequireDefault(require("./tag-number"));

var _package = require("../package.json");

var _assert = _interopRequireDefault(require("assert"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { "default": obj }; }

/**
 * Creates the IGDB API object, populated with methods for building a query.
 * @arg {string} [clientID]
 * @arg {string} [appAccessToken]
 * @arg {Object} [options] Apicalypse Options
 * @returns {Object}
 */
var _default = function _default(clientID, appAccessToken) {
  var opts = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};
  var id = clientID || process.env.TWITCH_CLIENT_ID || global.TWITCH_CLIENT_ID;
  var token = appAccessToken || process.env.TWITCH_APP_ACCESS_TOKEN || global.TWITCH_APP_ACCESS_TOKEN;
  (0, _assert["default"])(id, "ClientID must be provided, either as an argument or through env TWITCH_CLIENT_ID");
  (0, _assert["default"])(token, "AppAccessToken must be provided, either as an argument or through env TWITCH_APP_ACCESS_TOKEN");
  var defaultOptions = {
    method: 'POST',
    baseURL: 'https://api.igdb.com/v4',
    headers: {
      'client-id': id,
      'authorization': "Bearer ".concat(token),
      'x-user-agent': "igdb-api-node v".concat(_package.version),
      accept: 'application/json'
    },
    responseType: 'json'
  };
  return (0, _apicalypse["default"])((0, _deepmerge["default"])(defaultOptions, opts, {
    isMergeableObject: _isPlainObject["default"]
  }));
};

exports["default"] = _default;